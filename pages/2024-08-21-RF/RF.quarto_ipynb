{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Random forest\"\n",
        "format: live-html\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "This is a short tutorial demonstrating the basic use of Random Forests (RF).\n",
        "\n",
        "Keywords: `Random Forests`, `Machine Learning`, `Statistics`\n",
        "\n",
        "## Objectives\n",
        "\n",
        "- Demonstrate a typical use case for RF\n",
        "- Evaluate outputs of RF\n",
        "- Visualisations\n",
        "\n",
        "## Further reading\n",
        "- Breiman, L., 2001. Random Forests. Machine Learning 45, 5–32. https://doi.org/10.1023/A:1010933404324\n",
        "\n",
        "> The original academic paper describing RF\n",
        "\n",
        "- Genuer, R., Poggi, J.-M., Tuleau-Malot, C., 2010. Variable selection using random forests. Pattern Recognition Letters 31, 2225–2236. https://doi.org/10.1016/j.patrec.2010.03.014\n",
        "\n",
        "> A practical article talking about using RF to objectively select a subset of columns from a big dataset for further analysis (in R)\n",
        "\n",
        "- James, G., Witten, D., Hastie, T., Tibshirani, R., 2021. An Introduction to Statistical Learning: with Applications in R, 2nd ed. 2021 edition. ed. Springer, New York, NY.\n",
        "\n",
        "> A great practical textbook on machine learning methods - Ch 08 is about RF and related methods\n",
        "\n",
        "## Why use Random Forests?\n",
        "\n",
        "- There are two principle uses of RF, **describing** a large dataset, or **making predictions** from new data trained on a large dataset\n",
        "\n",
        "- The dependent variable in RF can be either categorical or numeric\n",
        "\n",
        "- RF is free from the burden of parametric assumptions and is fast and easy to use\n",
        "\n",
        "- **Dimension reduction** - Once **important variables** are identified, they can be used for further analysis\n",
        "\n",
        "## A simple RF example for classification\n",
        "\n",
        "We will use the famous `iris`** dataset to classify iris species based on several morphological measurements (hence, this is a classification application of RF using a categorical dependent variable). \n",
        "\n",
        "\\*\\*Fisher, R. A. (1936) The use of multiple measurements in taxonomic problems. Annals of Eugenics, 7, Part II, 179–188. doi:10.1111/j.1469-1809.1936.tb02137.x.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{webr}\n",
        "#| edit: false\n",
        "data(iris) # load the data\n",
        "head(iris) # print the first few lines of data\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "We can get an idea of how the morphological variables relate to the species variable graphically.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{webr}\n",
        "# NB you can edit and re-run this code...\n",
        "plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)\n",
        "legend(x = \"topleft\", legend = unique(iris$Species), col = unique(iris$Species), pch = 1)\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "Let's perform RF and look at some outputs for this dataset.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{webr}\n",
        "library(randomForest)\n",
        "\n",
        "myrf <-  randomForest(Species ~ ., data = iris)\n",
        "print(myrf) # for classification, we get a \"confusion matrix\"\n",
        "\n",
        "```\n",
        "\n",
        "```{webr}\n",
        "# variance importance plot\n",
        "varImpPlot(myrf)\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "`Mean Decrease Gini` is a measure used in random forests to indicate how important a particular feature (i.e. predictor variables, independent variables, etc.) is for making accurate predictions. It shows how much the model's accuracy would decrease if that feature were left out, with higher values indicating more important features.\n",
        "\n",
        "Here, we can see `petal width` and `petal length` are more important than sepal width and length.  Maybe we should look at this graphically compared to our other plot above?\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{webr}\n",
        "plot(Petal.Length ~ Petal.Width, col = Species, data = iris)\n",
        "legend(x = \"topleft\", legend = unique(iris$Species), col = unique(iris$Species), pch = 1)\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "A very practical way to look at variable importance here would be, say, if you could only choose two explanatory variables for further analysis, you would definitely choose `petal width` and `petal length`.  For this trivial example where there are only four variables this is not so important, but imagine if you had 100 or more potential explanatory variables...\n",
        "\n",
        "## Regression example \n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{webr}\n",
        "data(mtcars)\n",
        "head(mtcars)\n",
        "                     \n",
        "```\n",
        "\n",
        "```{webr}\n",
        "library(visreg)\n",
        "\n",
        "mylm <- lm(mpg ~ disp + hp + wt, data = mtcars)\n",
        "\n",
        "par(mfrow = c(1,3))\n",
        "plot(mpg ~ disp, mtcars)\n",
        "plot(mpg ~ hp, mtcars, main = \"Plots of raw data\")\n",
        "plot(mpg ~ wt, mtcars)\n",
        "\n",
        "par(mfrow = c(1,3))\n",
        "visreg(mylm, \"disp\")\n",
        "visreg(mylm, \"hp\", main = \"Plots of marginal effects\")\n",
        "visreg(mylm, \"wt\")\n",
        "                     \n",
        "```\n",
        "\n",
        "```{webr}\n",
        "set.seed(4543)\n",
        "rf.fit <- randomForest(mpg ~ ., data=mtcars, ntree=1000,\n",
        "                       keep.forest=FALSE, importance=TRUE)\n",
        "rf.fit    \n",
        "\n",
        "```\n",
        "\n",
        "```{webr}\n",
        "varImpPlot(rf.fit)    \n",
        "\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "The **%MSE (Percent Mean Squared Error)** in random forests measures how much a specific feature improves the accuracy of predictions by reducing errors, with higher values indicating more important features. \n",
        "\n",
        "**Node purity** indicates how well a feature splits the data within a tree, with higher purity meaning that the splits created by the feature result in more homogeneous groups (e.g., more accurate classifications).\n",
        "\n",
        "## Refining and using random forests\n",
        "\n",
        "1. There are a lot of options\n",
        "\n",
        "**Usage**\n",
        "\n",
        "randomForest(`x`, `y`=NULL,  `xtest`=NULL, `ytest`=NULL, `ntree`=500,\n",
        "             `mtry`=if (!is.null(y) && !is.factor(y))\n",
        "             max(floor(ncol(x)/3), 1) else floor(sqrt(ncol(x))),\n",
        "             `weights`=NULL,\n",
        "             `replace`=TRUE, `classwt`=NULL, `cutoff`, `strata`,\n",
        "             `sampsize` = if (replace) nrow(x) else ceiling(.632*nrow(x)),\n",
        "             `nodesize` = if (!is.null(y) && !is.factor(y)) 5 else 1,\n",
        "             `maxnodes` = NULL,\n",
        "             `importance`=FALSE, `localImp`=FALSE, `nPerm`=1,\n",
        "             `proximity`, `oob.prox`=proximity,\n",
        "             `norm.votes`=TRUE, `do.trace`=FALSE,\n",
        "             `keep.forest`=!is.null(y) && is.null(xtest), corr.bias=FALSE,\n",
        "             `keep.inbag`=FALSE, ...)\n",
        "       \n",
        " Important considerations:\n",
        " \n",
        " - how many trees do you need?\n",
        " - is `set.seed()` important to you?\n",
        " - should you scale your variables?\n",
        " - should you create new \"features\" derived from existing variables?\n",
        " - how can you deal with missing values in your data?\n",
        " - should you scale your data?\n"
      ],
      "id": "cc9c7c77"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\00776360\\AppData\\Roaming\\Python\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}