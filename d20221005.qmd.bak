---
title: "2022-10-05"
---

![](img/harug-hex.png){width="125"}

## Quarto: R Markdown's "new clothes"?

**Our** $10^2$ meeting! (Ed)

The goal here is to make a **Quarto website** using **RStudio**, then deploy it to **Github pages** in an **organization repository**

Quarto is a markdown language system used to generate websites and other documents (like pdf, word, html talk slides) that automatically generates all of the formatting framework for you. I.e. you can make a modern, sophisticated website without having to learn html, javascipt, css, etc. There are other tools that can let you do this, but here it is open source, reproducible, integrated into RStudio, and unreliant on third party solutions.

**Preparation**

-   [Latest version of RStudio installed](https://www.rstudio.com/products/rstudio/download/)

-   [Latest version of Quarto for RStudio installed](https://quarto.org/docs/get-started/)

-   [Have a free Github account](https://github.com/)

-   [Latest version of Github Desktop installed](https://desktop.github.com/)

## 1 Github setup

You can choose to use your personal account or make a free Github organization owned by your personal account.

The advantage of making a github organization here is that it can have a github pages repo, without using the one on your personal account. You can skip this step if you prefer to make this tutorial site using your personal github account github page.

<br>

### 1.1 Create github organization

Create your organization (I recommend) using the account details matching you main github account. You can add the remaining details as you wish for your organization.

<br>

![](img/20221005-gitorg.png){width="200"}

<br>

-   Choose **Create a free organization**

-   Org. **name**, (main account) **email**

<br>

![](img/20221005-org1.png){width="300"}

<br>

### 1.2 Create repository

<br>

Create a new repository:

-   Choose **repo name** (e.g. 'website')

-   Make **public**

-   Click **Create Repository**

------------------------------------------------------------------------

![](img/20221005-repo.png){width="500"}

<br>

### 1.3 Local repo

<br>

-   **set up in Github Desktop** (or other means you prefer)

![](img/20221005-desktop.png){width="300"}

<br>

-   From Github Desktop, **make a local path** for the repo

![](img/20221005-desktop2.png){width="300"}

------------------------------------------------------------------------

<br>

-   Examine your **local directory**

![](img/20221005-desktop3.png){width="300"}

<br>

## 2 Quarto website

Here we will use RStudio to set up a Quarto website and adjust a few settings

### 2.1 New project

In RStudio:

-   Create a new project

-   Choose Existing Directory

-   browse to your local repo folder (/website, if you follow my example)

![](img/20221005-proj.png)

------------------------------------------------------------------------

### 2.2 Create Quarto website template

Now in the RStudio **Terminal tab** (the Terminal tab, not the Console tab...), type:

> Terminal

    quarto create-project --type website

**Terminal output:**

![](img/20221005-terminal.png)

**Files output:**

![](img/20221005-terminal2.png)

## 3 Basic quarto editing

We are going to set up the most basic quarto website that has **two Sections, each with one webpage**.

### 3.1 `_quarto.yaml`

**YAML** stands for "YAML Ain't Markdown Language"

**Markdown** is a language designed to easily format plain text into modern HTML, which can get complicated

**HTML** is HyperText Markup Language, which formats web content documents

Your `_quarto.yaml` file allows you to control formatting on your website in a very terse way. There are many options, but they are easy to use and the documentation is very good (see Resources below).

Basically we are going to:

-   make a website type document

-   set the output directory for html

-   make sidebar navigation

-   set the theme for our website

-   enable the "visual" editor in RStudio (slightly buggy but useful)

### 3.2 Default YAML

Open your **\_quarto.yaml** file in the RStudio editor.

        project:                << project type
          type: website

        website:                << website options
          title: "website"      << title
          navbar:               << navbar options
            left:
              - href: index.qmd
                text: Home
              - about.qmd

        format:                 << themes and aesthetics
          html:
            theme: cosmo
            css: styles.css
            toc: true

We can quickly see visually how this default YAML file "renders" your website. RStudio will automatically generate **.html** pages based on code in your **.qmd** files (our default website has only one .qmd, but a website will typically have more). Then RStudio will launch a "local server" to "host" your rendered website on your local browser to preview it. Let's do that now:

-   Open the **index.qmd** file in RStudio

-   Notice the Quarto Render button

-   Click Render!

![](img/20221005-render.png)

------------------------------------------------------------------------

Your new website should look like this:

![](img/20221005-web1.png)

### 3.3 Custom YAML

Customizing your `.yaml` file is The Way (![](img/icon-mandalorian.webp){width="20"}) to customize your website.

Copy and past the new yaml below into your `_quarto.yaml` file. This will:

-   Direct html outputs to a `docs` subfolder

-   Customize the website title (use your own)

-   Create a "docked" navigation system

-   Change the html theme

-   Add a user-interactive theme button

```{=html}
<!-- -->
```
    project:
      type: website
      output-dir: docs

    website:
      title: "R Stats Bootcamp"
      sidebar:
    #    logo: 
        style: "docked"
        search: true
        contents: 
          - section: "Information"
            contents:
              - index.qmd
    format:
      html:
        highlight-style: a11y
        theme:
          light: flatly
          dark: darkly
        css: styles.css
        toc: true

    editor: visual

Now save it and hit render!

![](img/20221005-web2.png) A. The locally hosted address

B. The site title

C. The theme button (dark chosen here)

D. The Section and page links

### 3.4 `.nojekyll`

A strength of Quarto is that is does all of the clever stuff for nice webpages and we can use this on Github. However, Github does some of this by default (far less cleverly). We want to turn this off. There is an easy way to do this by creating an empty placeholder document called `.nojekyll` in your repo root directory. The presence of this file tells github not to render the markdown by it's own system (their system being called "Jekyll").

Note in the RStudio Terminal (which emulates Linux for \[*sic*\] Windoze users)

![](img/20221005-nojekyll.png)

In your `Terminal` window:

## 4 Configuring github pages

Now you have a test website you can experiment with and populate with content. First let's see how the live version looks on the web.

### 4.1 Push changes to Github

Back to Github Desktop.

![](img/20221005-ghd1.png) There have been some changes!

A. A list of your changed files

B. Summary field you must provide (describe changes)

C. Detail of the changes

D. The Commit button

For now, enter a brief Summary (e.g., "site initialization"), and hit the commit button.

The repository will update and the Publish branch button will appear - hit it!

![](img/20221005-ghd2.png)

### 4.2 Github account

After a few minutes your Github repository will update to be identical to your local copy of the repo.

Navigate to the repository on your organization account.

![](img/20221005-pages.png) A. Navigate to your repo

B. Click the Settings tab

C. Click the Pages option

D. Choose `main` on the Branch dropdown

------------------------------------------------------------------------

![](img/20221005-pages1.png) A. Now select `/docs` on the Select folder dropdown (remember we set output to this folder...)

### 4.3 View your site

The format of a Github pages wesite URL (i.e. web address) is like this:

<account name>.github.io/<Github pages repo name>

E.g.: https://rstats-bootcamp.github.io/website/

## 5 Develop your own page

<center>![](img/inspiration.jpg)</center>

## Resources

[Quarto website](https://quarto.org/)

[OFFICIAL documentation (excellent)](https://quarto.org/docs/guide/)

[Good blog post about setting a quarto website up](https://www.apreshill.com/blog/2022-04-we-dont-talk-about-quarto/)

<br><br>

![](img/HDS.png){fig-alt="Harper Data Science" width="125"}

This group is supported by the research and teaching community at [Harper Adams University](https://www.harper-adams.ac.uk/ "Harper Adams University") and by students and alumnists of the [MSc in Data Science for Global Agriculture, Food, and Environment](https://www.harper-adams.ac.uk/courses/postgraduate/201194/data-science-for-global-agriculture-food-and-environment "MSc in Data Science"), and is led by [Ed Harris](https://www.harper-adams.ac.uk/general/staff/profile/201620/Edwin-Harris/ "Ed's Faculty page").
